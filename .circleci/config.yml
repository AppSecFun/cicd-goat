version: 2.1

parameters:
  VERSION:
    type: string
    default: ""

jobs:
  ci:
    machine:
      image: ubuntu-2004:202010-01
    resource_class: large
    steps:
      - checkout
      - run:
          name: Docker compose
          command: |
            python3 rename.py git
            cp -R ctfd/data/ tmp-ctfd/
            docker-compose -f docker-compose-dev.yaml up -d --build
      - run:
          name: Install testing dependencies
          command: |
            python3 --version
            python3 -m pip install pipenv==2022.8.30 
            python3 -m pipenv install --deploy
      - run:
          name: Wait for services to start
          command: ./wait.sh
      - run:
          name: Pytest
          command: |
            pipenv run python -m pytest tests/
  release:
    machine:
      image: ubuntu-2004:202010-01
    resource_class: large
    environment:
      ORG: cidersecurity
      VERSION: << pipeline.parameters.VERSION >>
    steps:
      - checkout
      - run:
          name: Docker compose
          command: |
            python3 rename.py git
            cp -R ctfd/data/ tmp-ctfd/
            docker-compose -f docker-compose-dev.yaml build --build-arg VERSION=$VERSION --build-arg COMMIT_SHA=$CIRCLE_SHA1
            docker-compose -f docker-compose-dev.yaml up -d
      - run:
          name: Install testing dependencies
          command: |
            python3 --version
            python3 -m pip install pipenv==2022.8.30 
            python3 -m pipenv install --deploy
      - run:
          name: Wait for services to start
          command: ./wait.sh
      - run:
          name: Pytest
          command: |
            pipenv run python -m pytest tests/
            docker-compose -f docker-compose-dev.yaml down
      - run:
          name: Push latest
          command: |
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker-compose -f docker-compose-dev.yaml push
      - run:
          name: Push version
          command: |
            echo "version: $VERSION"
            docker tag $ORG/goat-jenkins-server:latest $ORG/goat-jenkins-server:$VERSION
            docker tag $ORG/goat-jenkins-agent:latest $ORG/goat-jenkins-agent:$VERSION
            docker tag $ORG/goat-gitea:latest $ORG/goat-gitea:$VERSION
            docker tag $ORG/goat-ctfd:latest $ORG/goat-ctfd:$VERSION
            docker tag $ORG/goat-prod:latest $ORG/goat-prod:$VERSION
            docker tag $ORG/goat-gitlab:latest $ORG/goat-gitlab:$VERSION
            docker tag $ORG/goat-gitlab-runner:latest $ORG/goat-gitlab-runner:$VERSION

            docker push $ORG/goat-jenkins-server:$VERSION
            docker push $ORG/goat-jenkins-agent:$VERSION
            docker push $ORG/goat-gitea:$VERSION
            docker push $ORG/goat-ctfd:$VERSION
            docker push $ORG/goat-prod:$VERSION
            docker push $ORG/goat-gitlab:$VERSION
            docker push $ORG/goat-gitlab-runner:$VERSION

workflows:
  version: 2
  ci:
    when:
      equal: [ "", << pipeline.parameters.VERSION >> ]
    jobs:
      - ci
  release:
    when:
      not:
        equal: [ "", << pipeline.parameters.VERSION >> ]
    jobs:
      - release
